[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autoklug"
dynamic = ["version"]
description = "Blazing fast AWS Lambda build system with automatic context detection"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Lewis Klug", email = "luis@kluglabs.com"}
]
maintainers = [
    {name = "Lewis Klug", email = "luis@kluglabs.com"}
]
keywords = [
    "aws", "lambda", "serverless", "deployment", "build", "automation", "devops", "ci-cd"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "boto3>=1.26.0",
    "click>=8.0.0",
    "python-dotenv>=0.19.0",
    "termcolor>=1.1.0",
    "GitPython>=3.1.0",
    "tqdm>=4.64.0",
    "virtualenv>=20.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/lewisklug/autoklug"
Documentation = "https://github.com/lewisklug/autoklug#readme"
Repository = "https://github.com/lewisklug/autoklug.git"
"Bug Tracker" = "https://github.com/lewisklug/autoklug/issues"

[project.scripts]
autoklug = "autoklug.main:cli"

[tool.setuptools.dynamic]
version = {attr = "autoklug.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["autoklug*"]
exclude = ["tests*", "deployment*"]

[tool.setuptools.package-data]
autoklug = ["templates/*.py", "templates/*.txt", "templates/*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "click.*",
    "termcolor.*",
    "tqdm.*",
    "GitPython.*",
    "virtualenv.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["autoklug"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/deployment/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
